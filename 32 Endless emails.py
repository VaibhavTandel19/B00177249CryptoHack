# we are using  Chinese Remainder Theorem (CRT)
# we are combining multiple modular equations and then we extraxt the secrect message
#check if root is exact and 
# compare it with (crypto{  )

from itertools import combinations
from Crypto.Util.number import *
import gmpy2

def crt(remainders, mod):
    assert len(remainders) == len(mod)
    N = 1
    for i in mod:
        N *= i
    Ni = []
    for i in range(len(mod)):
        Ni.append(N // mod[i])
    Y = []
    for i in range(len(mod)):
        Y.append(pow(Ni[i], -1, mod[i]))
    res = 0
    for i in range(len(mod)):
        res += remainders[i] * Ni[i] * Y[i]
    return res % N

n0 = 14528915758150659907677315938876872514853653132820394367681510019000469589767908107293777996420037715293478868775354645306536953789897501630398061779084810058931494642860729799059325051840331449914529594113593835549493208246333437945551639983056810855435396444978249093419290651847764073607607794045076386643023306458718171574989185213684263628336385268818202054811378810216623440644076846464902798568705083282619513191855087399010760232112434412274701034094429954231366422968991322244343038458681255035356984900384509158858007713047428143658924970374944616430311056440919114824023838380098825914755712289724493770021
e = 3
c0 = 6965891612987861726975066977377253961837139691220763821370036576350605576485706330714192837336331493653283305241193883593410988132245791554283874785871849223291134571366093850082919285063130119121338290718389659761443563666214229749009468327825320914097376664888912663806925746474243439550004354390822079954583102082178617110721589392875875474288168921403550415531707419931040583019529612270482482718035497554779733578411057633524971870399893851589345476307695799567919550426417015815455141863703835142223300228230547255523815097431420381177861163863791690147876158039619438793849367921927840731088518955045807722225

n = [n0, n1, n2, n3, n4, n5, n6]  
c = [c0, c1, c2, c3, c4, c5, c6]  

for i, j, k in combinations(range(len(n)), 3):
    mod = [n[i], n[j], n[k]]
    remains = [c[i], c[j], c[k]]
    
    
    crt_result = crt(remains, mod)
    
    
    m = gmpy2.iroot(crt_result, 3)
    
    
    if m[1]:
        flag = long_to_bytes(m[0]) 

        if b'crypto{' in flag:
            print(flag)
